// <auto-generated />
using System;
using ApiDashboard.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApiDashboard.Migrations
{
    [DbContext(typeof(DashboardContext))]
    [Migration("20241031073245_CrateTablesMigrations")]
    partial class CrateTablesMigrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence<int>("clientes_id_seq");

            modelBuilder.HasSequence<int>("modulos_id_seq");

            modelBuilder.HasSequence<int>("tickets_id_seq");

            modelBuilder.Entity("ApiDashboard.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('clientes_id_seq')");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("ClienteId")
                        .HasName("clientes_pkey");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ApiDashboard.Models.Modulo", b =>
                {
                    b.Property<int>("ModuloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('modulos_id_seq')");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("ModuloId")
                        .HasName("modulos_pkey");

                    b.ToTable("Modulos");
                });

            modelBuilder.Entity("ApiDashboard.Models.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('tickets_id_seq')");

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer")
                        .HasColumnName("FK_ID_CLIENT");

                    b.Property<DateOnly>("DataAbertura")
                        .HasColumnType("date")
                        .HasColumnName("OPENING_DATE");

                    b.Property<DateOnly?>("DataEncerramento")
                        .HasColumnType("date")
                        .HasColumnName("CLOSING_DATE");

                    b.Property<int>("ModuloId")
                        .HasColumnType("integer")
                        .HasColumnName("FK_ID_MODULE");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("TITLE");

                    b.HasKey("TicketId")
                        .HasName("tickets_pkey");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ModuloId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("ApiDashboard.Models.Ticket", b =>
                {
                    b.HasOne("ApiDashboard.Models.Cliente", "Cliente")
                        .WithMany("Tickets")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tickets_cliente_id_fkey");

                    b.HasOne("ApiDashboard.Models.Modulo", "Modulo")
                        .WithMany("Tickets")
                        .HasForeignKey("ModuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tickets_modulo_id_fkey");

                    b.Navigation("Cliente");

                    b.Navigation("Modulo");
                });

            modelBuilder.Entity("ApiDashboard.Models.Cliente", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("ApiDashboard.Models.Modulo", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
